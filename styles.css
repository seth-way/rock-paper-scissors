:root {
  --nintendo-gray-1: rgb(193, 190, 185);
  --nintendo-gray-2: rgb(145, 139, 146);
  --darkest-gray: rgb(111, 105, 112);
  --sky-blue: rgb(84, 148, 254);
  --grass-green: rgb(117, 185, 36);
  --checker-1: rgb(251, 184, 9);
  --checker-2: rgb(180, 78, 9);
  --custom-border: 3px solid var(--darkest-gray);
  /* --custom-border: 3px solid color-mix(in srgb, var(--darkest-gray) 50%, black); */
}

*,
*:before,
*:after {
  font-family: 'ArcadeClassic', sans-serif;
}

.flex-center {
  display: flex;
  align-items: center;
}

body.flex-center {
  flex-direction: column;
  justify-content: space-evenly;
  height: 100vh;
  margin: 0px;
  text-align: center;
  overflow: scroll;
}
/*<><> Header <><>*/
header.flex-center {
  width: 100%;
  font-size: 1em;
  justify-content: center;
  gap: 1.5%;
}

h1 {
  transition: all 1.5s ease-in-out;
}

h1:hover {
  color: red;
  scale: 1.3;
  &:first-child {
    rotate: -365deg;
  }
  &:last-child {
    rotate: 365deg;
  }
}

.hide {
  animation: 1.5s ease-in-out 1 both hide;
}
/*<><> Console <><>*/
#console {
  position: relative;
  background: linear-gradient(
    40deg,
    var(--nintendo-gray-1),
    rgba(218, 223, 225, 1)
  );
  width: 75%;
  aspect-ratio: 2.2/1;
  max-width: 1800px;
  min-width: 700px;
  border-radius: 30px;
  box-shadow: -0.5em 0.5em 0.5em 0.5em rgba(0, 0, 0, 0.3);
}

button,
.clickable {
  transition: all 0.2s ease-in-out;
  border: var(--custom-border);
  &:hover {
    cursor: pointer;
    transform: scale(1.1);
    filter: brightness(150%);
  }
}

h2 {
  font-size: 1em;
}

p {
  margin-block-start: 0;
  margin-block-end: 0;
}
/*<><> Screen <><>*/
#screen-layer,
#buttons-layer {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  border-radius: 30px;
}

#screen-layer.flex-center {
  justify-content: center;
  z-index: 2;
  border: var(--custom-border);
}

#screen-frame.flex-center {
  justify-content: center;
  margin-bottom: 3%;
  background: var(--nintendo-gray-2);
  width: 70%;
  height: 85%;
  border-radius: 20px;
  border: var(--custom-border);
}

#screen {
  position: relative;
  display: flex;
  align-items: stretch;
  background: var(--sky-blue);
  width: 80%;
  height: 85%;
  margin-bottom: 3%;
  border: var(--custom-border);
  border-radius: 20px;
  overflow: hidden;
}

#screen-background {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  height: 100%;
  width: 100%;
}

.player-info.flex-center {
  width: 25%;
  flex-direction: column;
  justify-content: space-around;
  z-index: 3;
  background-color: var(--checker-1);
  background-image: linear-gradient(
      45deg,
      var(--checker-2) 25%,
      transparent 25%
    ),
    linear-gradient(135deg, var(--checker-2) 25%, transparent 25%),
    linear-gradient(45deg, transparent 75%, var(--checker-2) 75%),
    linear-gradient(135deg, transparent 75%, var(--checker-2) 75%);
  background-position: 0 0, 4% 0, 4% -4%, 0 -4%;
  background-size: 8% 8%;
  border-right: thick solid var(--checker-2);
  border-left: thick solid var(--checker-2);
  transition: all 2s ease-in-out;
  & > h2,
  & > h3 {
    background: color-mix(in srgb, var(--checker-1) 85%, transparent);
    border-radius: 10%;
    padding: 2%;
  }
  &.hide {
    transform: translateX(-110%);

    &:last-child {
      transform: translateX(110%);
    }
  }
}

/* gameplay area */
#game.flex-center {
  width: 100%;
  justify-content: space-around;
  transition: 2s ease-in-out;
}

#game > img {
  height: 40%;
  transition: opacity 2s ease-in-out;
}

img.ready {
  animation: 1.5s ease-in-out 0s 1 both appearFromLeft,
    1.5s linear 1.6s infinite bounce;
}
/* targets all p1 game battle emojis */
[id$='1-battle'] {
  transform: scaleX(-1);
  &.ready {
    animation: 1.5s ease-in-out 0s 1 both appearFromRight,
      1.5s linear 1.6s infinite reverse bounce;
  }
}

.fade-out {
  opacity: 0;
  z-index: 0;
}

#sky.flex-center {
  height: 85%;
  width: 100%;
  flex-direction: column;
}

#sky > * {
  transition: opacity 1s ease-in-out;
}

#ground {
  height: 15%;
  background-color: var(--checker-1);
  background-image: linear-gradient(
      45deg,
      var(--checker-2) 25%,
      transparent 25%
    ),
    linear-gradient(135deg, var(--checker-2) 25%, transparent 25%),
    linear-gradient(45deg, transparent 75%, var(--checker-2) 75%),
    linear-gradient(135deg, transparent 75%, var(--checker-2) 75%);
  background-position: 0 0, 1em 0, 1em -1em, 0 -1em;
  background-size: 2em 2em;
  border-top: thick var(--grass-green) solid;
}
/*<><> Buttons <><>*/
button {
  aspect-ratio: 1/1;
  border-radius: 50%;
}

#buttons-layer {
  z-index: 3;
  display: flex;
  justify-content: space-between;
  width: 100%;
  border-radius: 30px;
  pointer-events: none;
}

form.flex-center {
  pointer-events: auto;
  flex-direction: column;
  width: 21%;
  height: 100%;
  font-size: 1.1em;
  border-radius: 30px 0 0 30px;
  &.right-btns {
    border-radius: 0 30px 30px 0;
  }
}

.btn-grp-a.flex-center {
  width: 33%;
  height: 25%;
  flex-direction: column;
  justify-content: center;
  margin-right: 5%;
  &.right {
    margin-right: -5%;
  }
}

.top-btn {
  width: 100%;
  aspect-ratio: 3.5/1;
  background: var(--nintendo-gray-2);
  border: var(--custom-border);
  border-radius: 10px;
}

.btn-choice-container.flex-center {
  position: relative;
  flex-direction: column;
  width: 100%;
  height: 40%;
}

.btn-grp-b.flex-center {
  width: 70%;
  height: 100%;
  flex-direction: column;
  justify-content: center;
}

.btn-grp-b > button {
  height: 40%;
  background: yellow;
  &:first-child {
    align-self: flex-start;
    background: red;
  }
  &:last-child {
    align-self: flex-end;
    background: blue;
  }
  &.right-side {
    &:first-child {
      align-self: flex-end;
    }
    &:last-child {
      align-self: flex-start;
    }
  }
}

.btn-grp-c.flex-center {
  position: absolute;
  flex-direction: column;
  justify-content: space-around;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  pointer-events: none;
}

.btn-grp-c > button {
  pointer-events: auto;
  height: 32%;
  background: green;
  &:first-child {
    margin-left: 46%;
  }
  &:last-child {
    margin-right: 46%;
    background: pink;
  }
  &.right-side {
    &:first-child {
      margin-left: -46%;
    }
    &:last-child {
      margin-right: -46%;
    }
  }
}
/* d-pad */
#d-pad.flex-center {
  height: 25%;
  aspect-ratio: 1/1;
  margin: 0 27% 0 0;
  aspect-ratio: 1/1;
  background: var(--nintendo-gray-2);
  filter: brightness(7rm index0%);
  border: var(--custom-border);
  border-radius: 50%;
  flex-direction: column;
  overflow: hidden;
}

#d-pad > div {
  height: 33.34%;
  &:nth-child(2) {
    width: 100%;
    display: flex;
    justify-content: space-between;
  }
}

.d-pad-btn {
  aspect-ratio: 1/1;
  background: var(--nintendo-gray-2);
  filter: brightness(60%);
  border: none;
}

.right-btns > div:last-child {
  height: 30%;
  display: flex;
  align-items: center;
  flex-direction: column;
  gap: 10%;
}

#speaker {
  height: 66%;
  margin-left: 60%;
}

.btn-grp-mode.flex-center {
  font-size: 0.7em;
  flex-direction: column;
  gap: 5%;
  margin-right: 25%;
}

#mode {
  height: 1em;
  aspect-ratio: 1/1;
  border-radius: 50%;
  background: red;
  border: 2px black solid;
}
/*<><> Emojis <><>*/
.avatar {
  height: 30%;
  transition: all 1s ease-in-out;
  &:hover {
    scale: 1.1;
    animation: wiggle 2s linear infinite alternate;
  }
}
/*<><> Animations <><>*/
@keyframes wiggle {
  0%,
  10%,
  20%,
  30%,
  40% {
    transform: rotate(0);
  }
  40%,
  50%,
  60%,
  70%,
  80% {
    transform: rotate(5deg);
  }
  45%,
  55%,
  65%,
  75%,
  85% {
    transform: rotate(-5deg);
  }
  100% {
    transform: rotate(0);
  }
}

@keyframes appearFromLeft {
  0% {
    translate: -180%;
  }
  100% {
    translate: 0%;
  }
}

@keyframes appearFromRight {
  0% {
    translate: 180%;
    transform: scaleX(-1);
  }
  100% {
    translate: 0%;
    transform: scaleX(-1);
  }
}

@keyframes appearFromAbove {
  0% {
    translate: 0 -180%;
  }
  100% {
    translate: 0 0;
  }
}

@keyframes bounce {
  0% {
    translate: inherit;
  }
  25% {
    translate: -15% -10%;
  }
  50% {
    translate: inherit;
  }
  75% {
    translate: 15% -10%;
  }
  100% {
    translate: initial;
  }
}
